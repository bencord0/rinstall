#!/bin/bash
CURRENT_DIR=$(cd -P $(dirname $0); pwd)
PARALLEL=$(grep processor /proc/cpuinfo | wc -l)
WGET="wget -c"

pushd $CURRENT_DIR

$WGET https://github.com/raspberrypi/firmware/raw/master/boot/bootcode.bin
$WGET https://github.com/raspberrypi/firmware/raw/master/boot/start.elf
$WGET https://github.com/raspberrypi/tools/raw/master/mkimage/args-uncompressed.txt
$WGET https://github.com/raspberrypi/tools/raw/master/mkimage/boot-uncompressed.txt
$WGET https://github.com/raspberrypi/tools/raw/master/mkimage/imagetool-uncompressed.py
$WGET https://github.com/downloads/bencord0/rinstall/stage4-rpi.tar.gz

# Don't download kernel source if we can avoid it
if [ ! -e linux ]; then
    git clone git://github.com/raspberrypi/linux.git linux
    pushd linux
    make bcmrpi_defconfig
    popd
fi

if [ ! -e compiler ]; then
    $WGET ftp://ftp.kernel.org/pub/tools/crosstool/files/bin/x86_64/4.6.3/x86_64-gcc-4.6.3-nolibc_arm-unknown-linux-gnueabi.tar.xz
    mkdir -p compiler
    tar xavf x86_64-gcc-4.6.3-nolibc_arm-unknown-linux-gnueabi.tar.xz --strip-components=1 -C compiler
fi

# http://www.compulab.co.il/workspace/mediawiki/index.php5/Linux:_Development_for_ARM_modules#Chroot_with_QEMU
if [ ! -e qemu-arm ]; then
    $WGET http://download.savannah.gnu.org/releases/qemu/qemu-0.14.1.tar.gz
    mkdir -p qemu-arm
    tar xavf qemu-0.14.1.tar.gz -C qemu-arm
    pushd qemu-arm/qemu-0.14.1
        ./configure --static --target-list="armeb-linux-user arm-linux-user"
        make -j${PARALLEL}
    popd
fi

# http://kernelnomicon.org/?p=92
if [! -e u-boot ]; then
    git clone git://git.denx.de/u-boot.git u-boot
    pushd "${CURRENT_DIR}"/u-boot
    make ${MAKEOPTS} rpi_b_config
    popd
fi

popd # CURRENT_DIR
